// Документация по взаимодействию с единым файловым хранилищем
// https://astraltrack.atlassian.net/wiki/spaces/EDO/pages/3163259010

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.20.3
// source: storage.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestGetFileWithAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             // ID файла (Обязателен, если не указан serviceId)
	CustomId string `protobuf:"bytes,2,opt,name=customId,proto3" json:"customId,omitempty"` // Уникальный ID в произвольном формате, задаваемый создателем файла (Необязательный)
}

func (x *RequestGetFileWithAttrs) Reset() {
	*x = RequestGetFileWithAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetFileWithAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetFileWithAttrs) ProtoMessage() {}

func (x *RequestGetFileWithAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetFileWithAttrs.ProtoReflect.Descriptor instead.
func (*RequestGetFileWithAttrs) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{0}
}

func (x *RequestGetFileWithAttrs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestGetFileWithAttrs) GetCustomId() string {
	if x != nil {
		return x.CustomId
	}
	return ""
}

type ResponseGetFileWithAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File  []byte     `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`   // Содержимое файла
	Attrs *FileAttrs `protobuf:"bytes,2,opt,name=attrs,proto3" json:"attrs,omitempty"` // Атрибуты файла
}

func (x *ResponseGetFileWithAttrs) Reset() {
	*x = ResponseGetFileWithAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetFileWithAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetFileWithAttrs) ProtoMessage() {}

func (x *ResponseGetFileWithAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetFileWithAttrs.ProtoReflect.Descriptor instead.
func (*ResponseGetFileWithAttrs) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseGetFileWithAttrs) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ResponseGetFileWithAttrs) GetAttrs() *FileAttrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

type RequestGetFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             // ID файла (Обязателен, если не указан serviceId)
	CustomId string `protobuf:"bytes,2,opt,name=customId,proto3" json:"customId,omitempty"` // Уникальный ID в произвольном формате, задаваемый создателем файла (Необязательный)
}

func (x *RequestGetFile) Reset() {
	*x = RequestGetFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetFile) ProtoMessage() {}

func (x *RequestGetFile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetFile.ProtoReflect.Descriptor instead.
func (*RequestGetFile) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{2}
}

func (x *RequestGetFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestGetFile) GetCustomId() string {
	if x != nil {
		return x.CustomId
	}
	return ""
}

type ResponseGetFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File []byte `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"` // Содержимое файла
}

func (x *ResponseGetFile) Reset() {
	*x = ResponseGetFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetFile) ProtoMessage() {}

func (x *ResponseGetFile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetFile.ProtoReflect.Descriptor instead.
func (*ResponseGetFile) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseGetFile) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type RequestSaveFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewrite     bool       `protobuf:"varint,1,opt,name=rewrite,proto3" json:"rewrite,omitempty"`        // Перезаписывать ли файл, если такой ID уже имеется в хранилище
	Id          string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`                   // ID файла для сохранения в формате UUIDv4 (Необязательный)
	ServiceName string     `protobuf:"bytes,3,opt,name=serviceName,proto3" json:"serviceName,omitempty"` // Название сервиса
	File        []byte     `protobuf:"bytes,4,opt,name=file,proto3" json:"file,omitempty"`               // Содержимое файла
	Attrs       *FileAttrs `protobuf:"bytes,5,opt,name=attrs,proto3" json:"attrs,omitempty"`             // Редактируемые атрибуты файла
	CustomId    string     `protobuf:"bytes,6,opt,name=customId,proto3" json:"customId,omitempty"`       // Уникальный ID в произвольном формате (макс. 128 символов), задаваемый создателем файла (Необязательный)
}

func (x *RequestSaveFile) Reset() {
	*x = RequestSaveFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSaveFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSaveFile) ProtoMessage() {}

func (x *RequestSaveFile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSaveFile.ProtoReflect.Descriptor instead.
func (*RequestSaveFile) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{4}
}

func (x *RequestSaveFile) GetRewrite() bool {
	if x != nil {
		return x.Rewrite
	}
	return false
}

func (x *RequestSaveFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestSaveFile) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *RequestSaveFile) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *RequestSaveFile) GetAttrs() *FileAttrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *RequestSaveFile) GetCustomId() string {
	if x != nil {
		return x.CustomId
	}
	return ""
}

type ResponseSaveFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID файла
}

func (x *ResponseSaveFile) Reset() {
	*x = ResponseSaveFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSaveFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSaveFile) ProtoMessage() {}

func (x *ResponseSaveFile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSaveFile.ProtoReflect.Descriptor instead.
func (*ResponseSaveFile) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{5}
}

func (x *ResponseSaveFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RequestRemoveFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                   // ID файла
	ServiceName string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"` // Название сервиса
	CustomId    string `protobuf:"bytes,3,opt,name=customId,proto3" json:"customId,omitempty"`       // Уникальный ID в произвольном формате, задаваемый создателем файла
}

func (x *RequestRemoveFile) Reset() {
	*x = RequestRemoveFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRemoveFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRemoveFile) ProtoMessage() {}

func (x *RequestRemoveFile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRemoveFile.ProtoReflect.Descriptor instead.
func (*RequestRemoveFile) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{6}
}

func (x *RequestRemoveFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestRemoveFile) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *RequestRemoveFile) GetCustomId() string {
	if x != nil {
		return x.CustomId
	}
	return ""
}

type ResponseRemoveFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseRemoveFile) Reset() {
	*x = ResponseRemoveFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRemoveFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRemoveFile) ProtoMessage() {}

func (x *ResponseRemoveFile) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRemoveFile.ProtoReflect.Descriptor instead.
func (*ResponseRemoveFile) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{7}
}

type RequestSetFileAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                   // ID файла
	ServiceName string     `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"` // Название сервиса
	Attrs       *FileAttrs `protobuf:"bytes,3,opt,name=attrs,proto3" json:"attrs,omitempty"`             // Атрибуты файла
	CustomId    string     `protobuf:"bytes,4,opt,name=customId,proto3" json:"customId,omitempty"`       // Уникальный ID в произвольном формате, задаваемый создателем файла
}

func (x *RequestSetFileAttrs) Reset() {
	*x = RequestSetFileAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSetFileAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSetFileAttrs) ProtoMessage() {}

func (x *RequestSetFileAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSetFileAttrs.ProtoReflect.Descriptor instead.
func (*RequestSetFileAttrs) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{8}
}

func (x *RequestSetFileAttrs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestSetFileAttrs) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *RequestSetFileAttrs) GetAttrs() *FileAttrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *RequestSetFileAttrs) GetCustomId() string {
	if x != nil {
		return x.CustomId
	}
	return ""
}

type ResponseSetFileAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseSetFileAttrs) Reset() {
	*x = ResponseSetFileAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSetFileAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSetFileAttrs) ProtoMessage() {}

func (x *ResponseSetFileAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSetFileAttrs.ProtoReflect.Descriptor instead.
func (*ResponseSetFileAttrs) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{9}
}

type RequestGetFileAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`             // ID файла
	CustomId string `protobuf:"bytes,2,opt,name=customId,proto3" json:"customId,omitempty"` // Уникальный ID в произвольном формате, задаваемый создателем файла
}

func (x *RequestGetFileAttrs) Reset() {
	*x = RequestGetFileAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetFileAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetFileAttrs) ProtoMessage() {}

func (x *RequestGetFileAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetFileAttrs.ProtoReflect.Descriptor instead.
func (*RequestGetFileAttrs) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{10}
}

func (x *RequestGetFileAttrs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestGetFileAttrs) GetCustomId() string {
	if x != nil {
		return x.CustomId
	}
	return ""
}

type ResponseGetFileAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                                             // ID файла
	Attrs        *AllFileAttrs            `protobuf:"bytes,2,opt,name=attrs,proto3" json:"attrs,omitempty"`                                                                                                       // Атрибуты файла
	ServiceAttrs map[string]*ServiceAttrs `protobuf:"bytes,3,rep,name=serviceAttrs,proto3" json:"serviceAttrs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Сервисные атрибуты файла
}

func (x *ResponseGetFileAttrs) Reset() {
	*x = ResponseGetFileAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetFileAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetFileAttrs) ProtoMessage() {}

func (x *ResponseGetFileAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetFileAttrs.ProtoReflect.Descriptor instead.
func (*ResponseGetFileAttrs) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseGetFileAttrs) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResponseGetFileAttrs) GetAttrs() *AllFileAttrs {
	if x != nil {
		return x.Attrs
	}
	return nil
}

func (x *ResponseGetFileAttrs) GetServiceAttrs() map[string]*ServiceAttrs {
	if x != nil {
		return x.ServiceAttrs
	}
	return nil
}

// FileAttrs - Атрибуты файла (редактируемые)
type FileAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TTL       string `protobuf:"bytes,1,opt,name=TTL,proto3" json:"TTL,omitempty"`              // Количество дней в течение которого файл будет храниться (Необязательный)
	Filename  string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`    // Наименование файла (Необязательный)
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`            // Бизнес-тип (Необязательный)
	SubType   string `protobuf:"bytes,4,opt,name=subType,proto3" json:"subType,omitempty"`      // Бизнес-подтип (Необязательный)
	Readonly  bool   `protobuf:"varint,5,opt,name=readonly,proto3" json:"readonly,omitempty"`   // Флаг доступности файла только для чтения (Необязательный)
	Protected bool   `protobuf:"varint,6,opt,name=protected,proto3" json:"protected,omitempty"` // Флаг, включающий блокировку от удаления файла (Необязательный)
}

func (x *FileAttrs) Reset() {
	*x = FileAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileAttrs) ProtoMessage() {}

func (x *FileAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileAttrs.ProtoReflect.Descriptor instead.
func (*FileAttrs) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{12}
}

func (x *FileAttrs) GetTTL() string {
	if x != nil {
		return x.TTL
	}
	return ""
}

func (x *FileAttrs) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileAttrs) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FileAttrs) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *FileAttrs) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

func (x *FileAttrs) GetProtected() bool {
	if x != nil {
		return x.Protected
	}
	return false
}

// AllFileAttrs - Атрибуты файла (редактируемые + сгенерированные)
type AllFileAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created     int64  `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`         // Дата создания (Unix)
	Expires     int64  `protobuf:"varint,2,opt,name=expires,proto3" json:"expires,omitempty"`         // Срок хранения (Unix)
	Creator     string `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`          // Создатель
	Filename    string `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`        // Имя файла
	Size        int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`               // Размер файла в байтах
	StorageType int32  `protobuf:"varint,6,opt,name=storageType,proto3" json:"storageType,omitempty"` // Тип хранилища (0 - горячее, 1 - холодное)
	Type        string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                // Бизнес-тип
	SubType     string `protobuf:"bytes,8,opt,name=subType,proto3" json:"subType,omitempty"`          // Бизнес-подтип
	Readonly    bool   `protobuf:"varint,9,opt,name=readonly,proto3" json:"readonly,omitempty"`       // Флаг доступности файла только для чтения
	Protected   bool   `protobuf:"varint,10,opt,name=protected,proto3" json:"protected,omitempty"`    // Флаг, включающий блокировку от удаления файла
	CustomId    string `protobuf:"bytes,11,opt,name=customId,proto3" json:"customId,omitempty"`       // Уникальный ID в произвольном формате, задаваемый создателем файла
}

func (x *AllFileAttrs) Reset() {
	*x = AllFileAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllFileAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllFileAttrs) ProtoMessage() {}

func (x *AllFileAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllFileAttrs.ProtoReflect.Descriptor instead.
func (*AllFileAttrs) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{13}
}

func (x *AllFileAttrs) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *AllFileAttrs) GetExpires() int64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *AllFileAttrs) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *AllFileAttrs) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *AllFileAttrs) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AllFileAttrs) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

func (x *AllFileAttrs) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AllFileAttrs) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *AllFileAttrs) GetReadonly() bool {
	if x != nil {
		return x.Readonly
	}
	return false
}

func (x *AllFileAttrs) GetProtected() bool {
	if x != nil {
		return x.Protected
	}
	return false
}

func (x *AllFileAttrs) GetCustomId() string {
	if x != nil {
		return x.CustomId
	}
	return ""
}

// ServiceAttrs - Атрибуты, установленные конкретным сервисом
type ServiceAttrs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TTL int64 `protobuf:"varint,1,opt,name=TTL,proto3" json:"TTL,omitempty"`
}

func (x *ServiceAttrs) Reset() {
	*x = ServiceAttrs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAttrs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAttrs) ProtoMessage() {}

func (x *ServiceAttrs) ProtoReflect() protoreflect.Message {
	mi := &file_storage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAttrs.ProtoReflect.Descriptor instead.
func (*ServiceAttrs) Descriptor() ([]byte, []int) {
	return file_storage_proto_rawDescGZIP(), []int{14}
}

func (x *ServiceAttrs) GetTTL() int64 {
	if x != nil {
		return x.TTL
	}
	return 0
}

var File_storage_proto protoreflect.FileDescriptor

var file_storage_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x45, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x56, 0x0a,
	0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x05,
	0x61, 0x74, 0x74, 0x72, 0x73, 0x22, 0x3c, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x72, 0x65, 0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x26,
	0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52,
	0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x49, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61,
	0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x61, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x22,
	0x8b, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x74, 0x74,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x16, 0x0a,
	0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x22, 0x41, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0xfa, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12, 0x51, 0x0a, 0x0c,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x1a,
	0x54, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x54, 0x54, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x0c, 0x41, 0x6c,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64,
	0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64,
	0x6f, 0x6e, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x20,
	0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x54, 0x54, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x54, 0x54, 0x4c,
	0x32, 0xb3, 0x03, 0x0a, 0x0a, 0x52, 0x70, 0x63, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x30, 0x01, 0x12, 0x55, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x72, 0x73, 0x1a,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x41, 0x74, 0x74, 0x72, 0x73,
	0x30, 0x01, 0x12, 0x3d, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x61,
	0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x28,
	0x01, 0x12, 0x41, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73,
	0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x53, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x47, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x12, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_storage_proto_rawDescOnce sync.Once
	file_storage_proto_rawDescData = file_storage_proto_rawDesc
)

func file_storage_proto_rawDescGZIP() []byte {
	file_storage_proto_rawDescOnce.Do(func() {
		file_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_storage_proto_rawDescData)
	})
	return file_storage_proto_rawDescData
}

var file_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_storage_proto_goTypes = []interface{}{
	(*RequestGetFileWithAttrs)(nil),  // 0: proto.RequestGetFileWithAttrs
	(*ResponseGetFileWithAttrs)(nil), // 1: proto.ResponseGetFileWithAttrs
	(*RequestGetFile)(nil),           // 2: proto.RequestGetFile
	(*ResponseGetFile)(nil),          // 3: proto.ResponseGetFile
	(*RequestSaveFile)(nil),          // 4: proto.RequestSaveFile
	(*ResponseSaveFile)(nil),         // 5: proto.ResponseSaveFile
	(*RequestRemoveFile)(nil),        // 6: proto.RequestRemoveFile
	(*ResponseRemoveFile)(nil),       // 7: proto.ResponseRemoveFile
	(*RequestSetFileAttrs)(nil),      // 8: proto.RequestSetFileAttrs
	(*ResponseSetFileAttrs)(nil),     // 9: proto.ResponseSetFileAttrs
	(*RequestGetFileAttrs)(nil),      // 10: proto.RequestGetFileAttrs
	(*ResponseGetFileAttrs)(nil),     // 11: proto.ResponseGetFileAttrs
	(*FileAttrs)(nil),                // 12: proto.FileAttrs
	(*AllFileAttrs)(nil),             // 13: proto.AllFileAttrs
	(*ServiceAttrs)(nil),             // 14: proto.ServiceAttrs
	nil,                              // 15: proto.ResponseGetFileAttrs.ServiceAttrsEntry
}
var file_storage_proto_depIdxs = []int32{
	12, // 0: proto.ResponseGetFileWithAttrs.attrs:type_name -> proto.FileAttrs
	12, // 1: proto.RequestSaveFile.attrs:type_name -> proto.FileAttrs
	12, // 2: proto.RequestSetFileAttrs.attrs:type_name -> proto.FileAttrs
	13, // 3: proto.ResponseGetFileAttrs.attrs:type_name -> proto.AllFileAttrs
	15, // 4: proto.ResponseGetFileAttrs.serviceAttrs:type_name -> proto.ResponseGetFileAttrs.ServiceAttrsEntry
	14, // 5: proto.ResponseGetFileAttrs.ServiceAttrsEntry.value:type_name -> proto.ServiceAttrs
	2,  // 6: proto.RpcStorage.GetFile:input_type -> proto.RequestGetFile
	0,  // 7: proto.RpcStorage.GetFileWithAttrs:input_type -> proto.RequestGetFileWithAttrs
	4,  // 8: proto.RpcStorage.SaveFile:input_type -> proto.RequestSaveFile
	6,  // 9: proto.RpcStorage.RemoveFile:input_type -> proto.RequestRemoveFile
	8,  // 10: proto.RpcStorage.SetFileAttrs:input_type -> proto.RequestSetFileAttrs
	10, // 11: proto.RpcStorage.GetFileAttrs:input_type -> proto.RequestGetFileAttrs
	3,  // 12: proto.RpcStorage.GetFile:output_type -> proto.ResponseGetFile
	1,  // 13: proto.RpcStorage.GetFileWithAttrs:output_type -> proto.ResponseGetFileWithAttrs
	5,  // 14: proto.RpcStorage.SaveFile:output_type -> proto.ResponseSaveFile
	7,  // 15: proto.RpcStorage.RemoveFile:output_type -> proto.ResponseRemoveFile
	9,  // 16: proto.RpcStorage.SetFileAttrs:output_type -> proto.ResponseSetFileAttrs
	11, // 17: proto.RpcStorage.GetFileAttrs:output_type -> proto.ResponseGetFileAttrs
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_storage_proto_init() }
func file_storage_proto_init() {
	if File_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetFileWithAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetFileWithAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSaveFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSaveFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRemoveFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRemoveFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSetFileAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSetFileAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetFileAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetFileAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllFileAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceAttrs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_storage_proto_goTypes,
		DependencyIndexes: file_storage_proto_depIdxs,
		MessageInfos:      file_storage_proto_msgTypes,
	}.Build()
	File_storage_proto = out.File
	file_storage_proto_rawDesc = nil
	file_storage_proto_goTypes = nil
	file_storage_proto_depIdxs = nil
}
