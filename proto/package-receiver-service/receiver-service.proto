syntax = "proto3";
package package_receiver;
option go_package = "./pkg/package-receiver-service;package_receiver";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Package Receiver API"
    version: "1.0.0"
  };
  host: "localhost:8080",
  schemes: HTTP,
  consumes: "application/json",
  produces: "application/json"
  security_definitions: {
    security: {
      key: "ApiKeyAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "authorization"
      }
    };
  };
  security: {
    security_requirement: {
      key: "ApiKeyAuth";
      value: {};
    }
  }
};

service PackageReceiver {
  rpc CheckHealth(google.protobuf.Empty) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      get: "/receiver/health"
    };
  }

  rpc GetTP(GetTPRequest) returns (GetTPResponse) {
    option (google.api.http) = {
      get: "/receiver/tp"
    };
  }
}

message GetTPRequest {
  string tp = 1;
  string doc = 2;
}

message GetTPResponse {
  bool founded = 1;
  string tp = 2;
  string origin = 3;
  bool isReceipt = 4;
  string receipt_url = 5;
  bool isSuccess = 6;
  bool isValidationError = 7;
  bool isInternalError = 8;
  bool isNew = 9;
  string createdAt = 10;
  string sendTaskNextAt = 11;
  repeated Directory content = 12;
  string errorText = 13;
  string errorCode = 14;
  string timeLayout = 15;
}

message Directory {
  string name = 1;
  repeated string files = 2;
}