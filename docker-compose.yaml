version: "3.8"

services:
  data-receiver:
    container_name: data-receiver
    image: efremovich/data-receiver
    restart: unless-stopped
    build:
      context: ./
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
      - "8090:8090"
    depends_on:
      - postgres
      - creator-db
      - nats
  postgres:
    image: postgres:15.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5445:5432"
  nats:
    container_name: nats
    image: nats:2.9.21
    command: -js
    restart: unless-stopped
    ports:
      - "4222:4222"
  creator-db:
    image: postgres:15.4
    restart: 'on-failure' # контейнер может не отработать с первого раза, если postgres медленно стартует
    entrypoint: ["psql", "postgres://postgres:postgres@postgres:5432", 
      "-c", "CREATE DATABASE \"erp_db\" WITH ENCODING = \"UTF8\""]
    depends_on:
      - postgres
  migrator-db:
    build:
      context: .
      dockerfile: ./migrations/Dockerfile
    restart: on-failure
    environment:
      DB_HOST: postgres
  jaeger:
    image: jaegertracing/all-in-one:1.48
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686" # web
      - "14268:14268"
      - "9411:9411"
  grafana:
    image: grafana/grafana-oss:10.0.3
    ports:
      - "3000:3000"
    volumes:
      - ./grafana_data:/var/lib/grafana
  prometheus:
    image: prom/prometheus:v2.37.9
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./infra/alerts.yml:/etc/prometheus/alerts.yml
      - ./prometheus_data:/prometheus
